---
prefixes:
  owl:      http://www.w3.org/2002/07/owl#
  rdf:      http://www.w3.org/1999/02/22-rdf-syntax-ns#
  rdfs:     http://www.w3.org/2000/01/rdf-schema#
  skos:     http://www.w3.org/2004/02/skos/core#
  s223:     http://data.ashrae.org/standard223#
  unit:     http://qudt.org/vocab/unit/
  qudt:     http://qudt.org/schema/qudt/
  s223x:    http://example.org/s223x/
  pnnl:     http://example.org/building/unnamed   # named in processing

maps:
  - id: luminaire types
    target: |
      pnnl:LuminaireType/{TypeMark}          # keeping id as a 'name'
        rdfs:label      {TypeMark};
        rdfs:subClassOf s223:Luminaire.
    source:
      # could not do select unique but only unique triples were created
      select
        TypeMark
      from
        LightingFixtureTypes
      where TypeMark is not NULL

  # - id: luminaire instances
  #   target: |
  #     bdg:Luminaire/{Id}
  #       rdfs:label                        {Id};
  #       a                                 bdg:LuminaireType/{TypeMark};
  #       s223x:ratedPowerInput             bdg:Luminaire/{Id}/Power;
  #       s223x:CorrectedColorTemperature   bdg:Luminaire/{Id}/ColorTemperature;
  #       qudt:LuminousFlux                 bdg:Luminaire/{Id}/LuminousFlux.
  #     bdg:Luminaire/{Id}/Power
  #       qudt:value   {Wattage};
  #       qudt:hasUnit unit:W.
  #     bdg:Luminaire/{Id}/ColorTemperature
  #       qudt:value   {CorrectedColorTemperature};
  #       qudt:hasUnit unit:K.
  #     bdg:Luminaire/{Id}/LuminousFlux
  #      qudt:value   {LuminousFlux};
  #      qudt:hasUnit unit:LM.
  #   source: |
  #     select
  #       LightingFixtures.Id                           as Id,
  #       LightingFixtureTypes.TypeMark                 as TypeMark,
  #       LightingFixtureTypes.Wattage                  as Wattage,
  #       LightingFixtureTypes.InitialColorTemperature  as CorrectedColorTemperature,
  #       LightingFixtureTypes.LuminousFlux             as LuminousFlux
  #     from
  #       LightingFixtures
  #     inner join
  #       LightingFixtureTypes
  #       on
  #         LightingFixtureTypes.Id=LightingFixtures.TypeId
  

  # - id: room instances
  #   #blank node issues
  #   #https://github.com/ontop/ontop/issues/372
  #   #https://github.com/ontop/ontop/issues/303
  #   # graphdb doesn't like blank nodes
  #   # https://docs.brickschema.org/metadata/entity-properties.html
  #   target: |
  #     s223x:{RoomType}  a   s223x:Room.
  #     bdg:Room/{Id}
  #       rdfs:label      {Number};
  #       a               s223x:{RoomType};
  #       s223x:GrossArea bdg:Room/{Id}/Area.
  #     bdg:Room/{Id}/Area
  #       qudt:value     {Area}; # no need to convert area value since it's a float in the db
  #       qudt:hasUnit   unit:M2. 
  #   source: |
  #     select
  #       Id,
  #       Number,
  #       replace(Name, ' ', '_')
  #       as RoomType,
  #       Area
  #     from
  #       Rooms
  

  # - id: floor instances
  #   target: |
  #     bdg:Floor/{Id}
  #       rdfs:label  {Name};
  #       a           s223x:Floor .
  #   source:
  #     select
  #       Id,
  #       Name
  #     from
  #       Levels
 
  # - id: level-room
  #   target: |
  #     bdg:Floor/{LevelIdentifier}
  #     # physicalspaces contain. domainspaces enclose
  #       s223:contains bdg:Room/{RoomsIdentifier} .
  #   source:
  #     select
  #       Levels.Id as LevelIdentifier,
  #       Rooms.Id  as RoomsIdentifier
  #     from Levels
  #       inner join
  #         Rooms
  #       on
  #         Levels.Id=Rooms.Level

  # - id: luminaire-room # physical relation
  #   target: bdg:Luminaire/{LuminaireIdentifier}
  #             s223:hasLocation bdg:Room/{RoomIdentifier} .
  #   source: |
  #     select
  #       LightingFixtures.Id as LuminaireIdentifier,
  #       Rooms.Id            as RoomIdentifier
  #     from
  #       LightingFixtures
  #     inner join
  #       Rooms
  #       on
  #         LightingFixtures.LuminaireRoomParameter=Rooms.Number


# #physical spcs can contain domainspaces
#   - id: lighting zones   # control relation. physcial spc (room) 'encloses' lightingzone
#     target:
#       bdg:Room/{RoomIdentifier} 
#         s223:encloses bdg:LightingControlZone/{LightingControlZoneID}.
#       bdg:LightingControlZone/{LightingControlZoneID}
#         rdfs:label  {LightingControlZoneID};
#         a           s223x:LightingSpace.
#     source:
#       select
#         Rooms.Id as RoomIdentifier,
#         substring(LightingControlZoneID, 1, 5) as LightingControlZoneID
#       from
#         LightingFixtures
#       inner join
#         Rooms
#         on
#           LightingFixtures.LuminaireRoomParameter=Rooms.Number
  
  # - id: hvac zones
  #   target:
  #     bdg:HVACZone/{Id}
  #       rdfs:label  {Name};
  #       a           brick:HVAC_Zone.
  #   source: |
  #     select # really want ' select distinct' here
  #       HVACZones.Id    as Id,
  #       HVACZones.Name  as Name
  #     from
  #       HVACZones
  #     inner join
  #       Rooms
  #       on
  #         Rooms.ThermalZonetoRoom=HVACZones.Name

  # - id: hvac zones - rooms
  #   target:
  #     bdg:HVACZone/{HVACZoneId}
  #       brick:hasPart       bdg:Room/{RoomId}.
  #   source:
  #     select
  #       HVACZones.Id    as  HVACZoneId,
  #       Rooms.Id        as  RoomId
  #     from
  #       HVACZones
  #     inner join
  #       Rooms
  #       on
  #         HVACZones.Name=Rooms.ThermalZonetoRoom 
