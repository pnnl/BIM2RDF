# copy/paste into your workdir and change where appropriate.
{%set project_name=  os.path.basename(os.path.abspath(os.path.join(root, '..')))  %}
name: {{project_name}}-{{os.path.basename(root)}}

{% set keep_here =     not is_included %}  # https://github.com/ESSS/conda-devenv/issues/120
{% set dev_req =       keep_here %}
{% set wrapped_exe =   keep_here %}
{% set run_req =       True %}  # serves as just annotation


# 'internal' dependency mgt. for includes: section
{% set included_workdir_pths = [] %}
{% set all_workdir_pths = [] %}
{% macro append_workdir_name(workdir, to) -%}
  {% set wdpth = os.path.abspath(os.path.join(root, '..', workdir))   %}
  {%if os.path.exists(os.path.join(wdpth, 'environment.devenv.yml')) %}
    {{ to.append(wdpth) or "" }} #"" is just a hack to not output None)
  {% endif %}
{%- endmacro %}
{% for maybe_workdir in  os.scandir( os.path.abspath(os.path.join(root, '..')) )   %}
      {{append_workdir_name(os.path.basename(maybe_workdir), all_workdir_pths)}}
{% endfor %}

# just fill out this stuff here
{% if dev_req %}
  ## append_workdir_name('project',     included_workdir_pths)}} 
{% endif %}
# ...and here
{% if run_req %}
  {{append_workdir_name('project', included_workdir_pths)}}
  {{ append_workdir_name('dvc', included_workdir_pths)}}
  {{ append_workdir_name('graphdb', included_workdir_pths)}}
  {{ append_workdir_name('speckle', included_workdir_pths)}}
  {{ append_workdir_name('ontologies', included_workdir_pths)}}
  {{ append_workdir_name('engine', included_workdir_pths)}}
{% endif %}


{% if included_workdir_pths %}
includes:
  {% for included in included_workdir_pths %}
  - {{(os.path.join(included, 'environment.devenv.yml'))}}
  {% endfor %}
{% endif %}


channels:
  - conda-forge
dependencies:
  - python<3.11                 # [run_req]
  - rdflib                      # [run_req]
  - pyyaml                      # [run_req]
  # pyshacl depends on owlrl
  # but being explicit here to say:
  # need graph expansion (owlrl) and validation (pyshacl)
  - pyshacl                     # [run_req]
  - owlrl                       # [run_req]
  # geometry
  - numpy                       # [run_req] 
  - scipy                       # [run_req]

  # dev
  - ipython                     # [dev_req]
  - pip:                        # [dev_req or run_req]
    - oxrdflib                  # [run_req]
    #- rdflib-endpoint           # [keep_here] # idk could be either but 'keep here'
    - requests-file             # [run_req] what needs this?
    - fire                      # [run_req] cli gen

  #- pytest                      # [dev_req] pyshacl does it all


environment:
  HOME: {{root}}              # [keep_here]
  PATH:
    # prioritize self paths (before others)
    # probably want to append to PATH and PYTHONPATH in your env
    - {{root}}
    - {{os.path.join(root, 'scripts', 'bin')}}                    # [keep_here]

    #adds all wrapped executables to path. NOT RECOMMENDED. exception for 'project' env
    # {% set path_allworkdirs=False %}
    # {% if path_allworkdirs %}
    # {% for workdir_pth in all_workdir_pths  %}
    # {% if  keep_here and os.path.basename(root)!=os.path.basename(workdir_pth) %}
    # - {{ os.path.join(workdir_pth, "wbin") }}                     # [keep_here]
    # {% endif %}
    # {% endfor %}
    # {% endif %}
    # adds included workdir wrapped execs
    {% for workdir_pth in included_workdir_pths %}
    # ...but dont add self
    {% if os.path.basename(root)!=os.path.basename(workdir_pth) 
      and (workdir_pth not in all_workdir_pths if path_allworkdirs else True)
    %}
    - {{os.path.join(workdir_pth, "wbin")}}
    {% endif %}
    {% endfor %}
  PYTHONPATH:
    - {{root}}
  # don't define the following in envs that include this
  # dooesnt make sense to have the following in envs that include this one
  WORK_DIR: '{{  os.path.basename(root) }}'                       # [keep_here]
  WORKDIR:  '{{  os.path.basename(root) }}'                       # [keep_here]
  WORK_DIR_PATH: '{{root}}'                                       # [keep_here]
  WORKDIR_PATH:  '{{root}}'                                       # [keep_here]
  PROJECTROOT:  '{{ os.path.abspath(os.path.join(root, '..')) }}' # [keep_here]
  PROJECT_ROOT: '{{ os.path.abspath(os.path.join(root, '..')) }}' # [keep_here]
  PROJECT_NAME: '{{project_name}}'                                # [keep_here]
  # ...plus, cant merge this key in a env that includes it
  MODE: local-dev  # vs. prod                                     # [keep_here]
